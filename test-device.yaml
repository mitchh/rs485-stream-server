esphome:
  name: easytouch-bridge-esp8266
  libraries:
    - "ESPAsyncTCP"

esp8266:
  board: nodemcuv2

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  domain: .lan
  manual_ip:
    static_ip: 192.168.30.22
    gateway: 192.168.30.1
    subnet: 255.255.255.0
    dns1: 192.168.30.1

logger:
  level: DEBUG
  # If using Hardware UART0 for RS485, you might need to set baud_rate to 0
  # to disable logger on UART0, or redirect it to UART1 (TX only on GPIO2)
  # if you need TX-only logging.
  # baud_rate: 0 # Disables USB logging if UART0 is used for RS485
  # tx_pin: GPIO2 # Redirect logger TX to UART1 (D4 pin on NodeMCU)

# for logging
api:
  port: 6053

web_server:
  port: 80

# UART for RS485 communication
uart:
  id: rs485_uart
  # --- IF USING SOFTWARE UART (Recommended D1, D2 for RX, TX) ---
  rx_pin: GPIO5 # D1
  tx_pin: GPIO4 # D2
  # --- IF USING HARDWARE UART0 (RX, TX pins) ---
  # rx_pin: GPIO3 # RXD0 (Hardware UART0 RX)
  # tx_pin: GPIO1 # TXD0 (Hardware UART0 TX)
  # --- COMMON SETTINGS ---
  baud_rate: 9600
  stop_bits: 1
  data_bits: 8
  parity: NONE
  rx_buffer_size: 256 # Default, usually fine for 9600 baud bridging

ota:
  platform: esphome
  password: "no riff raff"

# External components - use local path for development
external_components:
  - source:
      type: local
      path: components
    components: [rs485_stream_server]

output:
  - platform: gpio
    id: flow_control_output
    pin: GPIO0 # D3 on NodeMCU
    inverted: False # Set to True if your RS485 transceiver requires active low for TX enable

rs485_stream_server:
  uart_id: rs485_uart
  tx_enable_output: flow_control_output
  tcp_port: 6683
